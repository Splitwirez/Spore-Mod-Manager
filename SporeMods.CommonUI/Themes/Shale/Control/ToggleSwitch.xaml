<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:cui="clr-namespace:SporeMods.CommonUI"
            xmlns:beh="http://schemas.microsoft.com/expression/2010/interactivity">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Type cui:ToggleSwitch}" TargetType="{x:Type cui:ToggleSwitch}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cui:ToggleSwitch}">
                    <DockPanel>
                        <cui:FloorPanel Background="#01000000" Width="50" Height="23" VerticalAlignment="Center" DockPanel.Dock="Right">
                            <Border x:Name="BackgroundBorder"
                                    Background="{DynamicResource ButtonPressedBackgroundBrush}"
                                    CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}"
                                    Margin="0"
                                    Padding="0"
                                    BorderBrush="{DynamicResource ButtonPressedBorderBrush}"
                                    BorderThickness="1">
                                <Border x:Name="InnerBackgroundBorder"
                                        Background="{DynamicResource TextBoxPressedSecondaryBackgroundBrush}"
                                        CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}"
                                        Margin="1"
                                        Padding="0"
                                        BorderBrush="Transparent"
                                        BorderThickness="0" />
                            </Border>
                            <StackPanel x:Name="PART_GripContainer" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2">
                                <Canvas x:Name="PART_Offsetter" Width="{TemplateBinding OffsetterWidth}" MinWidth="0" MaxWidth="32"/>
                                <Button x:Name="PART_Grip" IsTabStop="False" Width="25" VerticalAlignment="Stretch" Margin="0" IsHitTestVisible="True">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <cui:FloorPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <Border x:Name="BackgroundBorder"
                                                        Background="{DynamicResource ButtonIdleSecondaryBackgroundBrush}"
                                                        CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                                                    <Border x:Name="InnerBackgroundBorder"
                                                            Margin="1"
                                                            Padding="0"
                                                            Background="{DynamicResource ButtonIdleBackgroundBrush}"
                                                            BorderBrush="Transparent"
                                                            BorderThickness="0"
                                                            CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}"/>
                                                </Border>
                                                <ContentPresenter Content="{TemplateBinding Content}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Margin="{TemplateBinding Padding}"
                                                                Focusable="False"/>
                                            </cui:FloorPanel>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type cui:ToggleSwitch}}}" Value="True">
                                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}" />
                                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonHoverBorderBrush}" />
                                                    <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource ButtonHoverSecondaryBackgroundBrush}" />
                                                </DataTrigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                                                    <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource ButtonPressedSecondaryBackgroundBrush}" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type cui:ToggleSwitch}}}" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}" />
                                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}" />
                                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}" />
                                                    <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}" />
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </StackPanel>
                        </cui:FloorPanel>
                        <TextBlock x:Name="PART_StateText"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   TextAlignment="Left"
                                   IsHitTestVisible="False"
                                   Margin="0,0,5,0"
                                   DockPanel.Dock="Right"/>
                        <!--Grid.Column="0" Grid.Row="1"-->
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextBlock.TextAlignment="{TemplateBinding TextBlock.TextAlignment}"/>
                        <!---->
                        <!--Grid.ColumnSpan="2" Grid.Row="0"-->
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition SourceName="PART_Grip" Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource TextBoxIdleBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonIdleBorderBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource TextBoxIdleSecondaryBackgroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource TextBoxHoverBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonHoverBorderBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource TextBoxHoverSecondaryBackgroundBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="BorderThickness" Value="0" />
                            <Setter TargetName="InnerBackgroundBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="Opacity" Value="0.5" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

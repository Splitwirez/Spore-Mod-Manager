<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:cui="clr-namespace:SporeMods.CommonUI"
			xmlns:core="clr-namespace:SporeMods.Core;assembly=SporeMods.Core"
			xmlns:mods="clr-namespace:SporeMods.Core.Mods;assembly=SporeMods.Core"
			xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
			xmlns:shale="clr-namespace:SporeMods.CommonUI.Themes.Shale"
			xmlns:sys="clr-namespace:System;assembly=mscorlib"
			xmlns:v="clr-namespace:SporeMods.Views">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Shale.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <cui:IconToImageBrushConverter x:Key="IconToImageBrushConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <cui:DoubleComparisonConverter x:Key="DoubleComparisonConverter"/>
    <cui:BorderPresenceToThicknessConverter x:Key="BorderPresenceToThicknessConverter"/>
    <cui:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>
    <cui:IsAllTrueConverter x:Key="IsAllTrueConverter"/>


    <!--### X button shown in some modals ###-->
    <Style x:Key="DismissModalButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource GlyphButtonStyle}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}"/>
        <Setter Property="Content" Value="{DynamicResource AnimatableContentControlCloseButtonIcon}"/>
    </Style>

    <!--### "Drop here to do whatever" box used when installing mods or specifying game install paths ###-->
    <Style x:Key="DropHereZoneStyle" TargetType="{x:Type cui:Zone}">
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Background" Value="#01000000"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cui:Zone}">
                    <!--Grid Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="GridSize" Width="0"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{Binding Width, ElementName=GridSize}"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{Binding Width, ElementName=GridSize}"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="{Binding Width, ElementName=GridSize}"/>
                            </Grid.RowDefinitions>

                            <Border Opacity="0.25" Background="{DynamicResource TopDownMaskBrush}" CornerRadius="6,0,0,0" Grid.Column="0" Grid.Row="0" OpacityMask="{DynamicResource FromLeftMaskBrush}" Width="12" HorizontalAlignment="Left"/>
                            <Border Opacity="0.25" Background="{DynamicResource FromLeftMaskBrush}" CornerRadius="6,0,0,0" Grid.Column="0" Grid.Row="0" OpacityMask="{DynamicResource TopDownMaskBrush}" Height="16" VerticalAlignment="Top"/>

                            <Border Opacity="0.25" Background="{DynamicResource FromRightMaskBrush}" CornerRadius="0,6,0,0" Grid.Column="2" Grid.Row="0" OpacityMask="{DynamicResource TopDownMaskBrush}" Height="16" VerticalAlignment="Top"/>
                            <Border Opacity="0.25" Background="{DynamicResource TopDownMaskBrush}" CornerRadius="0,6,0,0" Grid.Column="2" Grid.Row="0" OpacityMask="{DynamicResource FromRightMaskBrush}" Width="12" HorizontalAlignment="Right"/>

                            <Border Opacity="0.25" Background="{DynamicResource BottomUpMaskBrush}" CornerRadius="0,0,6,0" Grid.Column="2" Grid.Row="2" OpacityMask="{DynamicResource FromRightMaskBrush}" Width="12" HorizontalAlignment="Right"/>
                            <Border Opacity="0.25" Background="{DynamicResource FromRightMaskBrush}" CornerRadius="0,0,6,0" Grid.Column="2" Grid.Row="2" OpacityMask="{DynamicResource BottomUpMaskBrush}" Height="8" VerticalAlignment="Bottom"/>

                            <Border Opacity="0.25" Background="{DynamicResource FromLeftMaskBrush}" CornerRadius="0,0,0,6" Grid.Column="0" Grid.Row="2" OpacityMask="{DynamicResource BottomUpMaskBrush}" Height="8" VerticalAlignment="Bottom"/>
                            <Border Opacity="0.25" Background="{DynamicResource BottomUpMaskBrush}" CornerRadius="0,0,0,6" Grid.Column="0" Grid.Row="2" OpacityMask="{DynamicResource FromLeftMaskBrush}" Width="12" HorizontalAlignment="Left"/>
                        </Grid>
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          TextElement.Foreground="#FF7F7F7F"
                                          Style="{DynamicResource h1}"
                                          Margin="{TemplateBinding Padding}"/>
                        <TextBox x:Name="Edge"
                                 Text=""
                                 IsHitTestVisible="False"/>
                        <!-IsEnabled="False"
                                 IsReadOnly="True"
                                 IsReadOnlyCaretVisible="False"->
                        <TextBlock x:Name="NoDragDrop"
                                   Text="Drag-and-drop unavailable because haha UAC quirks go brrr (PLACEHOLDER) (NOT LOCALIZED)"
                                   Margin="{TemplateBinding Padding}"
                                   Style="{DynamicResource h1}"
                                   Visibility="Collapsed"/>
                    </Grid-->
                    <cui:FloorPanel>
                        <Rectangle x:Name="NoTransparencyAllowed"
                                   Margin="-5,-48,-5,-68">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.75" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <DockPanel>
                            <Separator x:Name="Shading"
                                   cui:AttachedProperties.CastDirection="Down"
                                   DockPanel.Dock="Top"
                                       Visibility="Collapsed"/>
                            <Separator cui:AttachedProperties.CastDirection="Up"
                                   DockPanel.Dock="Bottom"
                                   Visibility="{Binding Visibility, ElementName=Shading}"/>
                            <ContentPresenter x:Name="PART_ContentPresenter"
                                            Content="{TemplateBinding Content}"
                                            TextElement.Foreground="#FF7F7F7F"
                                            Style="{DynamicResource h1}"
                                            Margin="{TemplateBinding Padding}"/>
                                <!--TextBlock x:Name="NoDragDrop"
                                   Text="Drag-and-drop unavailable because haha UAC quirks go brrr (PLACEHOLDER) (NOT LOCALIZED)"
                                   Margin="{TemplateBinding Padding}"
                                   Style="{DynamicResource h1}"
                                   Visibility="Collapsed"/-->
                        </DockPanel>
                    </cui:FloorPanel>
                    <ControlTemplate.Triggers>
                        <!--No drag servant, UAC interference present-->
                        <Trigger Property="Tag" Value="NoDrop">
                        </Trigger>
                        <!--Drag servant running-->
                        <Trigger Property="Tag" Value="HasDragServant">
                        </Trigger>
                        <!--In drag servant-->
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="Shading" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--### Footer for various modal things, typically houses responses/actions (OK, Apply, Cancel, etc.) ###-->
    <!--TODO: Rename to not sound like it's specific to configurators-->
    <Style x:Key="CustomInstallerFooterZoneStyle" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Style="{DynamicResource HorizontalBarBorderStyle}" DockPanel.Dock="Bottom"
					CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='0,0,3,3;0,0,0,0'}">
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--### Left pane in mod configurators ###-->
    <Style x:Key="ModConfiguratorComponentsListStyle" TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="MinWidth" Value="300"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel x:Name="PART_ItemsPanel" IsItemsHost="True" Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--Setter Property="Margin" Value="0,0,-14,0"/>
		<Setter Property="Panel.ZIndex" Value="999"/-->
        <!--Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border Style="{DynamicResource HorizontalBarBorderStyle}" DockPanel.Dock="{TemplateBinding DockPanel.Dock}"
						CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}">
                        <ScrollViewer cui:AttachedProperties.CornerCurves="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <cui:FloorPanel>
                                <ItemsPresenter/>
                                <!-Rectangle x:Name="RightShadow" HorizontalAlignment="Right" Width="7" IsHitTestVisible="False">
									<Rectangle.Fill>
										<LinearGradientBrush Opacity="0.5" StartPoint="1,0" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
									</Rectangle.Fill>
								</Rectangle->
                            </cui:FloorPanel>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter-->
    </Style>

    <!--### Header for mod configurators ###-->
    <Style x:Key="ModConfiguratorHeaderZoneStyle" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0.75" EndPoint="0,1">
					<LinearGradientBrush.GradientStops>
						<GradientStop Offset="0" Color="#10000000"/>
						<GradientStop Offset="1" Color="#40000000"/>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContentControl}">
					<Border Background="{TemplateBinding Background}" CornerRadius="3,3,0,0">
						<ContentPresenter Content="{TemplateBinding Content}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Style="{DynamicResource HorizontalBarBorderStyle}" DockPanel.Dock="Top" CornerRadius="3,3,0,0">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--### Style for container for modal/popup things ###-->
    <Style x:Key="ModalDialogZoneStyle" TargetType="{x:Type cui:AnimatableContentControl}" BasedOn="{StaticResource {x:Type cui:AnimatableContentControl}}">
        <Setter Property="cui:AttachedProperties.CornerCurves" Value="False,False,True,True"/>
        <Style.Triggers>
            <!--TODO: Restore this-->
            <!--DataTrigger Binding="{Binding FallbackValue=True, Path=HasCustomWindowDecorations, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ManagerContent}}}" Value="False">
                <Setter Property="cui:AttachedProperties.CornerCurves" Value="False"/>
                <Setter Property="Margin" Value="0,-31,0,0"/-->
            <!--Setter TargetName="RootBorder" Property="CornerRadius" Value="0"/>
				<Setter TargetName="RootBorder" Property="BorderThickness" Value="0"/>
				<Setter Property="Margin" Value="0"/-->
            <!--/DataTrigger-->
        </Style.Triggers>
    </Style>

    <!--### GroupBox style for radio groups in mod configurators ###-->
    <Style x:Key="ConfiguratorComponentGroupStyle" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <StackPanel Orientation="Vertical">
                        <Separator cui:AttachedProperties.CastDirection="Up"/>
                        <StackPanel Orientation="Vertical"
                                    Margin="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="HeaderPresenter"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Stretch"
                                        Style="{DynamicResource h2}"
                                        TextBlock.TextAlignment="Left"
                                        VerticalAlignment="Center"/>
                            <Rectangle Height="{DynamicResource SettingsControlsVerticalSpacing}"
                                       Visibility="Hidden"/>
                            <ContentPresenter x:Name="BodyPresenter"/>
                        </StackPanel>
                        <Separator cui:AttachedProperties.CastDirection="Down"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="HeaderPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModJobsBatchContainerStyle" TargetType="{x:Type cui:AnimatableContentControl}" BasedOn="{StaticResource {x:Type cui:AnimatableContentControl}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cui:AnimatableContentControl}">
                    <cui:FloorPanel>
                        <Border x:Name="RootBorder" Background="{DynamicResource ModalPanelBackdropBrush}" BorderBrush="{DynamicResource TitlebarBorderBrush}" BorderThickness="1" CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Opacity="0">
                            <cui:FloorPanel x:Name="ContentGrid"
                                  Margin="48"
                                  RenderTransformOrigin="0.5,0.5">
                                <cui:FloorPanel.RenderTransform>
                                    <ScaleTransform ScaleX="0.25" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
                                </cui:FloorPanel.RenderTransform>
                                <!--Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions-->
                                <Rectangle x:Name="SizeHelper" Visibility="Hidden"/>
                                <!--DockPanel>
                                    <Rectangle x:Name="SlideAnimationHelper" Visibility="Hidden"
                                               Width="{Binding ActualWidth, ElementName=SizeHelper, Mode=OneWay}"
                                               DockPanel.Dock="Right"
                                               Margin="0">
                                        <Rectangle.LayoutTransform>
                                            <ScaleTransform ScaleX="0"/>
                                        </Rectangle.LayoutTransform>
                                    </Rectangle-->
                                <Border x:Name="ContentPaneBorder"
                                        CornerRadius="3"
                                        Effect="{DynamicResource TertiaryDropShadow}"
                                        BorderBrush="Transparent"
                                        UseLayoutRounding="True">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.75" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter Content="{TemplateBinding Content}"
                                                          Grid.Row="1"/>
                                        <Border x:Name="ContentPaneOverlayBorder"
                                                Background="{DynamicResource ModalPanelBackdropBrush}"
                                                CornerRadius="3"
                                                Opacity="0"
                                                Grid.RowSpan="2"/>
                                        <Button x:Name="PART_CloseButton"
                                                Content="{DynamicResource AnimatableContentControlCloseButtonIcon}"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Visibility="{Binding HasCloseButton, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                DockPanel.Dock="Top"
                                                Panel.ZIndex="99999999"
                                                Style="{DynamicResource AnimatableContentControlCloseButtonStyle}"/>
                                    </Grid>
                                </Border>
                                <!--/DockPanel-->
                                <Rectangle x:Name="Spacer" Width="{DynamicResource SettingsControlsHorizontalSpacing}"
                                           Grid.Column="1"
                                           DataContext="{Binding CurrentModalVM.ShownSettingsMod}"/>
                                <!--DockPanel>
                                    <Rectangle x:Name="SlideAnimationHelper2" Visibility="Hidden"
                                               Width="36"
                                               DockPanel.Dock="Left"
                                               Margin="0">
                                        <Rectangle.LayoutTransform>
                                            <ScaleTransform ScaleX="0"/>
                                        </Rectangle.LayoutTransform>
                                    </Rectangle-->
                                    <Border x:Name="ModSettingsPaneBorder"
                                        CornerRadius="3"
                                        Effect="{DynamicResource TertiaryDropShadow}"
                                        BorderBrush="Transparent"
                                        UseLayoutRounding="True"
                                        Margin="132,-24,-60,-24"
                                        IsHitTestVisible="True"
                                        Visibility="Collapsed"
                                        Opacity="0">
                                        <!--Width="{Binding ActualWidth, ElementName=SlideAnimationHelper, Mode=OneWay}"
                                        HorizontalAlignment="Right"-->
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.75" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                        </Border.Background>
                                        <DockPanel>
                                            <Button Command="{Binding CurrentModalVM.ShowModSettingsCommand}"
                                                CommandParameter="{x:Null}"
                                                Content="close button (PLACEHOLDER)"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                DockPanel.Dock="Top"
                                                Panel.ZIndex="99999999"
                                                Style="{DynamicResource AnimatableContentControlCloseButtonStyle}">
                                                <!--
                                                Style="{DynamicResource AnimatableContentControlCloseButtonStyle}"-->
                                                <!--Button.Content>
                                                    <Rectangle Width="{Binding Content.ActualWidth, ElementName=PART_CloseButton}"
                                                           Height="{Binding Content.ActualWidth, ElementName=PART_CloseButton}"
                                                               Fill="Red">
                                                        <!-Rectangle.Fill>
                                                            <VisualBrush Visual="{Binding Content, ElementName=PART_CloseButton}"
                                                                     Stretch="Fill"/>
                                                        </Rectangle.Fill->
                                                    </Rectangle>
                                                </Button.Content-->
                                            </Button>
                                            <cui:Zone Content="{Binding CurrentModalVM.ShownSettingsModSettingsVM, Converter={x:Static cui:ViewLocator.Converter}}" />
                                            <!--
                                            <ContentPresenter>
                                                <e:Interaction.Behaviors>
                                                    <v:ModSettingsDataContextChangedBehavior Mod="{Binding DataContext, ElementName=Spacer}"/>
                                                </e:Interaction.Behaviors>
                                            </ContentPresenter>
                                            -->
                                        </DockPanel>
                                    </Border>
                                <!--/DockPanel-->
                            </cui:FloorPanel>
                        </Border>
                    </cui:FloorPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CurrentModalVM.ShownSettingsMod}" Value="{x:Null}">
                            <!--Setter TargetName="ContentPaneBorder" Property="Grid.ColumnSpan" Value="3"/>
                            <Setter TargetName="ModSettingsPaneBorder" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mode=OneTime}" Value="{x:Null}"-->
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--DoubleAnimation Storyboard.TargetName="SlideAnimationHelper" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="0" EasingFunction="{StaticResource DisappearEase}" Duration="0:0:0.26"/-->
                                        <ThicknessAnimation Storyboard.TargetName="ContentPaneBorder" Storyboard.TargetProperty="Margin" To="0" EasingFunction="{StaticResource DisappearEase}" Duration="0:0:0.26"/>
                                        <!--DoubleAnimation Storyboard.TargetName="SlideAnimationHelper2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="0" EasingFunction="{StaticResource DisappearEase}" Duration="0:0:0.26"/-->
                                        <ThicknessAnimation Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="Margin" To="132,-24,-60,-24" EasingFunction="{StaticResource DisappearEase}" Duration="0:0:0.26"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.26" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--BooleanAnimationUsingKeyFrames Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.26" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames-->
                                        <DoubleAnimation Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentPaneOverlayBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--DoubleAnimation Storyboard.TargetName="SlideAnimationHelper" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="0.667" EasingFunction="{StaticResource AppearEase}" Duration="0:0:0.25"/-->
                                        <ThicknessAnimation Storyboard.TargetName="ContentPaneBorder" Storyboard.TargetProperty="Margin" To="-36,0,36,0" EasingFunction="{StaticResource AppearEase}" Duration="0:0:0.26"/>
                                        <!--DoubleAnimation Storyboard.TargetName="SlideAnimationHelper2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="0.1" EasingFunction="{StaticResource AppearEase}" Duration="0:0:0.25"/-->
                                        <ThicknessAnimation Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="Margin" To="96,-24,-24,-24" EasingFunction="{StaticResource AppearEase}" Duration="0:0:0.26"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--BooleanAnimationUsingKeyFrames Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames-->
                                        <DoubleAnimation Storyboard.TargetName="ModSettingsPaneBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentPaneOverlayBorder" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                            <Setter TargetName="ModSettingsPaneBorder" Property="IsHitTestVisible" Value="False"/>
                            <Setter TargetName="ContentPaneOverlayBorder" Property="IsHitTestVisible" Value="False"/>
                            <!--Setter TargetName="ContentPaneBorder" Property="Grid.ColumnSpan" Value="3"/-->
                            <!--Setter TargetName="ModSettingsPaneBorder" Property="Visibility" Value="Collapsed"/-->
                        </DataTrigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentGrid" Storyboard.TargetProperty="RenderTransform.ScaleX" To="1" EasingFunction="{StaticResource AppearEase}" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="RootBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentGrid" Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.25" EasingFunction="{StaticResource DisappearEase}" Duration="0:0:0.26"/>
                                        <DoubleAnimation Storyboard.TargetName="RootBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger SourceName="RootBorder" Property="Opacity" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModJobsBatchListStyle" TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"
                                Margin="0,0,0,-5"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--Setter Property="ItemContainerStyle" Value="{DynamicResource ModJobEntryStyle}"/-->
    </Style>
    <!--Style x:Key="ModJobEntryStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentPresenter}">
                    <!-Border x:Name="Root"->
                        <DockPanel>
                            <Separator cui:AttachedProperties.CastDirection="Down"
                                   DockPanel.Dock="Bottom"/>
                            <ContentPresenter ContentSource="Content"
                                          Margin="{TemplateBinding Padding}"/>
                        </DockPanel>
                    <!-/Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#FFFF00FF"/>
                        </Trigger>
                    </ControlTemplate.Triggers->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style-->
    <Style x:Key="ModJobEntryContainerStyle" TargetType="{x:Type cui:Zone}">
        <Setter Property="Padding" Value="0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cui:Zone}">
                    <DockPanel>
                        <Separator cui:AttachedProperties.CastDirection="Down"
                                   DockPanel.Dock="Bottom"/>
                        <ContentPresenter ContentSource="Content"
                                          Margin="{TemplateBinding Padding}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--### Cell style for the mod jobs batch list shown prior to proceeding with installation ###-->
    <Style x:Key="ModJobsBatchCellZoneStyle" TargetType="{x:Type cui:Zone}">
        <!-- BasedOn="{StaticResource {x:Type ContentControl}}"-->
        <Setter Property="Padding" Value="4,0"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cui:Zone}">
                    <DockPanel>
                        <Separator cui:AttachedProperties.CastDirection="Right"
                                   DockPanel.Dock="Left"/>
                        <ContentPresenter ContentSource="Content"
                                          Margin="{TemplateBinding Padding}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <sys:Double x:Key="SeparatorEndsExtent">12</sys:Double>
        </Style.Resources>
    </Style>
    <Style x:Key="ModJobsBatchSettingsCellZoneStyle" TargetType="{x:Type cui:Zone}" BasedOn="{StaticResource ModJobsBatchCellZoneStyle}">
        <Setter Property="Padding" Value="4,0"/>
    </Style>
</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:cui="clr-namespace:SporeMods.CommonUI"
			xmlns:core="clr-namespace:SporeMods.Core;assembly=SporeMods.Core"
			xmlns:mods="clr-namespace:SporeMods.Core.Mods;assembly=SporeMods.Core"
			xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
			xmlns:shale="clr-namespace:SporeMods.CommonUI.Themes.Shale"
			xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Shale.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--### Size of various vertical gaps between elements in the Settings tab ###-->
    <sys:Double x:Key="SettingsControlsVerticalSpacing">5</sys:Double>
    
    <!--### Size of various horizontal gaps between elements in the Settings tab ###-->
    <sys:Double x:Key="SettingsControlsHorizontalSpacing">5</sys:Double>
    
    <sys:Double x:Key="SubControlsInset">15</sys:Double>
    <Thickness x:Key="SubControlsInsetMargin">15,0,0,0</Thickness>





    <!--### Settings grouping/spacing thingy ###-->
    <Style x:Key="WithSubControls" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter ContentSource="Header" DockPanel.Dock="Top"/>
                        <Rectangle Height="{DynamicResource SettingsControlsVerticalSpacing}"
                                DockPanel.Dock="Top"
                                Visibility="Hidden"/>
                        <ContentPresenter ContentSource="Content" Margin="{DynamicResource SubControlsInsetMargin}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--### Credits list ###-->
    <Style x:Key="CreditsStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="-10,0"/>
        <Setter Property="Padding" Value="0,0,0,-5"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ItemsPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <cui:StackPanelEx Spacing="-5" IsItemsHost="true"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--### Credits list entry ###-->
    <Style x:Key="CreditsButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Vertical">
                        <cui:FloorPanel>
                            <Border x:Name="BackgroundBorder"
                                    Background="{DynamicResource ButtonIdleSecondaryBackgroundBrush}"
                                    CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="{Binding Path=(cui:AttachedProperties.BorderPresence), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BorderPresenceToThicknessConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}"
                                    Opacity="0">
                                <Border x:Name="InnerBackgroundBorder"
                                        Margin="1"
                                        Padding="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}">
                                    <Border x:Name="BorderBrushBorder"
                                            Margin="-1"
                                            Padding="0"
                                            Background="Transparent"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}"/>
                                </Border>
                            </Border>
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </cui:FloorPanel>
                        <Separator Margin="40,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonHoverBorderBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource ButtonHoverSecondaryBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource ButtonPressedSecondaryBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}" />
                            <Setter TargetName="InnerBackgroundBorder" Property="Background" Value="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}" />
                            <Setter TargetName="BorderBrushBorder" Property="Opacity" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Style x:Key="AutoDetectGamePathStyle" TargetType="CheckBox">
        <!-Setter Property="Margin" Value="0,0,-1,0"/>
        <Setter Property="cui:AttachedProperties.CornerCurves" Value="True,False,False,True"/->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <cui:FloorPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <DockPanel>
                            <cui:FloorPanel Width="Auto" VerticalAlignment="Stretch" DockPanel.Dock="Right">
                                <Border x:Name="IdleBackground" CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border x:Name="IdleInnerBackground" CornerRadius="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="HoverBackground" CornerRadius="{Binding CornerRadius, ElementName=IdleBackground}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="{Binding CornerRadius, ElementName=IdleInnerBackground}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="PressedBackground" CornerRadius="{Binding CornerRadius, ElementName=IdleBackground}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                                    </Border.Background>
                                    <Border CornerRadius="{Binding CornerRadius, ElementName=IdleInnerBackground}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="DisabledBackground" CornerRadius="{Binding CornerRadius, ElementName=IdleBackground}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                                    <Border CornerRadius="{Binding CornerRadius, ElementName=IdleInnerBackground}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                                </Border>
                                <cui:FloorPanel x:Name="OpacityLimiterCanvas" Opacity="1" Margin="5">
                                    <DockPanel>
                                        <cui:FloorPanel DockPanel.Dock="Right">
                                            <Path x:Name="CheckMark" Data="M 2 5 L 4 9 L 8 0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{DynamicResource CheckBoxTickBrush}" StrokeThickness="1.125"
							  Opacity="0" />
                                            <Path x:Name="IndeterminateBox" Data="M 0.5 0.5 L 0.5 6 L 6 6 L 6 0.5 Z" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource CheckBoxTickBrush}" Stroke="{DynamicResource CheckBoxTickBrush}" StrokeThickness="1.25" Opacity="0" />
                                        </cui:FloorPanel>
                                        <TextBlock Text="{DynamicResource Settings!Folders!AutoDetectPath}" Margin="0,0,5,0"/>
                                    </DockPanel>
                                </cui:FloorPanel>
                            </cui:FloorPanel>
                            <cui:FloorPanel Margin="5,0,0,0">
                                <ContentPresenter Margin="{TemplateBinding Padding}"/>
                            </cui:FloorPanel>
                        </DockPanel>
                    </cui:FloorPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
														 Storyboard.TargetProperty="Opacity" To="1"
														 Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
														 Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsThreeState" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
														 Storyboard.TargetProperty="Opacity" To="1"
														 Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
														 Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
														 Storyboard.TargetProperty="Opacity" To="1"
														 Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
														 Storyboard.TargetProperty="Opacity" To="0"
														 Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
														 Storyboard.TargetProperty="Opacity" To="1"
														 Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="OpacityLimiterCanvas"
														 Storyboard.TargetProperty="Opacity" To="0.5"
														 Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
														 Storyboard.TargetProperty="Opacity" To="0"
														 Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="OpacityLimiterCanvas"
														 Storyboard.TargetProperty="Opacity" To="1"
														 Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GamePathActionBoxStyle" TargetType="{x:Type cui:ActionBox}">
        <Setter Property="ButtonContent" Value="Browse..."/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="cui:AttachedProperties.CornerCurves">
            <Setter.Value>
                <cui:CornerCurves TopLeft="False" BottomLeft="False"/>
            </Setter.Value>
        </Setter>
        <!-Style.Triggers>
			<Trigger Property="Name" Value="GaDataFolderTextBox">
			</Trigger>
		</Style.Triggers->
    </Style-->
</ResourceDictionary>

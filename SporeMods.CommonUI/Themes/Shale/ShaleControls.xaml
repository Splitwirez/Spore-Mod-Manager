<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:cui="clr-namespace:SporeMods.CommonUI"
            xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
            xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ActionBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/AnimatableContentControl.xaml"/>
        <!--REMOVED ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/BreadcrumbsBar.xaml"/-->
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/Button.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/CheckBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ComboBox.xaml"/>
        <!--REMOVED ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/CommandBar.xaml"/-->
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/Window.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/GroupBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ListView.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/Menu.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ProgressBar.xaml"/>
        <!--REMOVED ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/Rearranger.xaml"/-->
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ScrollBar.xaml"/>
        <!--REMOVED ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ShaleBorderDecorator.xaml"/-->
        <!--REMOVED ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/SpinBox.xaml"/-->
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/Separator.xaml"/>
        <!--ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/StatusBar.xaml"/-->
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/TabControl.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/TextBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ToggleSwitch.xaml"/>
        <!--ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/TreeView.xaml"/-->
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="Border" x:Key="HorizontalBarBorderStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource HorizontalPanelBackgroundGradientStops}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource HorizontalPanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ContentControl.Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="CornerRadius" Value="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}"/>
        <Setter Property="cui:AttachedProperties.CornerCurves" Value="False"/>
        <Style.Triggers>
            <Trigger Property="DockPanel.Dock" Value="Left">
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
            </Trigger>
            <Trigger Property="DockPanel.Dock" Value="Top">
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
            </Trigger>
            <Trigger Property="DockPanel.Dock" Value="Right">
                <Setter Property="BorderThickness" Value="1,0,0,0"/>
            </Trigger>
            <Trigger Property="DockPanel.Dock" Value="Bottom">
                <Setter Property="BorderThickness" Value="0,1,0,0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="VerticalBarBorderStyle" BasedOn="{StaticResource HorizontalBarBorderStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource VerticalPanelBackgroundGradientStops}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource VerticalPanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ContentControl.Foreground" Value="{DynamicResource PanelForeground}"/>
    </Style>

    <!--Style x:Key="MessageBoxIconZoneStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="50,0,-25,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="MessageBoxBodyTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="50,50"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="MessageBoxButtonsListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5,5,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Style="{DynamicResource HorizontalBarBorderStyle}" DockPanel.Dock="{Binding (DockPanel.Dock), RelativeSource={RelativeSource Mode=TemplatedParent}}" cui:AttachedProperties.CornerCurves="{Binding Path=(cui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Stretch">
                        <ItemsPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                                    <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Visible" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                        <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button x:Name="Button" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{Binding}" Margin="0,0,5,0">
                        <e:Interaction.Behaviors>
                            <uib:MessageBoxButtonBehavior Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:MessageBoxContent}}}"/>
                        </e:Interaction.Behaviors>
                    </Button>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style-->
</ResourceDictionary>
